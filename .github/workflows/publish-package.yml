name: Publish Package

on:
  push:
    branches:
      - main
      - master
      - next
      - beta
      - "*.x" # Maintenance releases branches

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Node dependencies
      run: npm ci --ignore-scripts

    - name: Cache PHP dependencies
      uses: actions/cache@v3
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

    - name: Install PHP dependencies
      uses: php-actions/composer@v6
      with:
        php_version: "8.2"
        php_extensions: bcmath pdo_mysql pdo_pgsql
        args: --prefer-dist --optimize-autoloader --no-progress --no-suggest --no-interaction
      env:
        COMPOSER_AUTH: '{"http-basic": {"nova.laravel.com": {"username": "${{ secrets.NOVA_USERNAME }}", "password": "${{ secrets.NOVA_LICENSE_KEY }}"}}}'

    - name: Gate 1 - Linters
      uses: tighten/duster-action@v3
      with:
        args: lint
        
    - name: Gate 2 - SonarQube scan
      uses: SonarSource/sonarqube-scan-action@v5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Gate 3 - Unit tests
      uses: php-actions/phpunit@v3

  release:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install semantic-release and dependencies
        run: |
          npm install semantic-release \
            @semantic-release/changelog \
            @semantic-release/git \
            @semantic-release/exec \
            conventional-changelog-conventionalcommits
          
      - name: Release with semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          PACKAGIST_USERNAME: ${{ secrets.PACKAGIST_USERNAME }}
          PACKAGIST_TOKEN: ${{ secrets.PACKAGIST_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: npx semantic-release

  update-develop:
    needs: [release]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
          
      - name: Merge main to develop
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout develop
          git merge main --no-ff -m "chore: merge main into develop"
          
          CURRENT_VERSION=$(git describe --tags --abbrev=0 | sed 's/v//')
          DEV_VERSION="${CURRENT_VERSION}"
          
          jq --arg version "$DEV_VERSION" '.version = $version' composer.json > tmp.json
          mv tmp.json composer.json
          
          git add composer.json
          git commit -m "chore: update develop version to $DEV_VERSION" || exit 0
          git push origin develop